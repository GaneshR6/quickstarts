{"version":3,"sources":["Partials/DatasourceItem.js","Partials/Datasource.js","Partials/Preview.js","Pages/Home.js","Partials/InstallationInstructions.js","Pages/View.js","App.js","serviceWorker.js","index.js"],"names":["DatasourceItem","props","name","source","state","className","this","React","Component","Datasource","sources","map","i","key","Preview","dashboard","screenshots","Math","floor","random","length","src","screenshot","alt","to","config","author","Home","search","setSearch","bind","event","value","setState","target","element","lowercaseSearch","toLowerCase","includes","toString","id","type","aria-describedby","placeholder","onChange","data","dashboards","filter","InstallationInstructions","installation","sort","url","item","pos","ary","requirements","a","b","requirement","href","rel","View","modalCallback","undefined","find","match","params","handle","copy","setAccountId","submitModal","closeModal","callback","file","getAccountId","fetch","location","then","response","json","dashboard_account_id","accountId","JSON","stringify","getDashboard","text","navigator","permissions","query","result","clipboard","writeText","alert","error","console","log","class","files","selected","visible","onClick","role","aria-label","modalVisible","tabIndex","style","data-dismiss","aria-hidden","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0911af78.chunk.js","sourcesContent":["import React from 'react';\n\nclass DatasourceItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    let name = '';\n\n    switch(props.source) {\n        case 'Transaction': name = 'APM'; break;\n        case 'SystemSample': name = 'Infrastructure'; break;\n        case 'ProcessSample': name = 'Infrastructure - Processes'; break;\n        default:\n          // Speciale case if config specifically set's it's own options\n          if (typeof props.source === 'object' && props.source !== null) {\n            name = props.source.name;\n          } else {\n            name = props.source;\n          }\n        break;\n    }\n\n    this.state = {\n        name,\n    };\n  }\n\n  render() {\n    return (\n      <span className=\"badge badge-dark\">{this.state.name}</span>\n    );\n  }\n\n}\n\nexport default DatasourceItem;\n","import React from 'react';\nimport DatasourceItem from './DatasourceItem';\n\nclass Datasource extends React.Component {\n\n  render() {\n    return (\n        <div className=\"sources\">\n            {this.props.sources.map((source, i) => {\n                return (<DatasourceItem key={source} source={source} />)\n            })}\n        </div>\n    );\n  }\n\n}\n\nexport default Datasource;\n","import React from 'react';\nimport Datasource from './Datasource';\nimport {\n    Link\n  } from \"react-router-dom\";\n\nclass Preview extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      'screenshot': this.props.dashboard.screenshots[Math.floor(Math.random() * this.props.dashboard.screenshots.length)],\n    };\n  }\n\n  render() {\n    return (\n        <div className=\"col-md-4 col-lg-3 col-sm-4\">\n            <div className=\"card mb-4 shadow-sm\">\n                <img src={ \"./data/\" + this.props.dashboard.name + \"/\" + this.state.screenshot} className=\"card-img-top\" alt=\"...\" />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      <Link className=\"\" to={\"/view/\" + this.props.dashboard.name}>\n                        { this.props.dashboard.config.name }\n                      </Link>\n                    </h5>\n                    <Datasource sources={this.props.dashboard.sources} />\n                    <div className=\"d-flex justify-content-between align-items-center pt-3\">\n                        <small className=\"text-muted\">Created by: { this.props.dashboard.config.author }</small>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n\n}\n\nexport default Preview;\n","import React from 'react';\nimport Preview from '../Partials/Preview';\nimport data from '../data.json';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search: '',\n        }\n\n        this.setSearch = this.setSearch.bind(this);\n        this.search = this.search.bind(this);\n    }\n\n    setSearch(event, value) {\n        this.setState({\n            search: event.target.value\n        })\n    }\n\n    search(element) {\n        let lowercaseSearch = this.state.search.toLowerCase();\n        if (element.config.name.toLowerCase().includes(lowercaseSearch)) {\n            return true;\n        }\n\n        if (element.sources.toString().toLowerCase().includes(lowercaseSearch)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        return (\n            <div>\n                <section className=\"jumbotron text-center\">\n                    <div className=\"container\">\n                        <h1>New Relic - Quick start library</h1>\n                        <p className=\"lead text-muted\">Library of curated dashboards & alerts with their dependencies.</p>\n                    </div>\n                </section>\n\n                <div className=\"album bg-light\">\n                    <div className=\"container\" id=\"root\">\n                        <div className=\"row py-5\">\n                            <input type=\"text\" className=\"form-control\" id=\"search\" aria-describedby=\"search\" placeholder=\"Search for specific datasource or technology\" value={this.state.search} onChange={this.setSearch} />\n                        </div>\n                    </div>\n                    <div className=\"container-fluid\" id=\"root\">\n                        <div className=\"row py-3\">\n                        {data.dashboards.filter(this.search).map((dashboard, i) => {\n                            return (<Preview key={dashboard.name} dashboard={dashboard} />)\n                        })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","import React from 'react';\n\nclass InstallationInstructions extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    let installation = this.props.sources.sort().map((source, i) => {\n      // Speciale case if config specifically set's it's own options\n      if (typeof source === 'object' && source !== null) {\n        return source;\n      }\n\n      switch(source) {\n        case 'ComputeSample':\n          return {\n            name: 'New Relic Amazon EC2 monitoring integration',\n            url: 'https://docs.newrelic.com/docs/integrations/amazon-integrations/aws-integrations-list/aws-ec2-monitoring-integration',\n          }\n        case 'SystemSample':\n        case 'ProcessSample':\n          return {\n            name: 'New Relic Infrastructure',\n            url: 'https://docs.newrelic.com/docs/infrastructure/install-configure-manage-infrastructure'\n          }\n        case 'PageView':\n          return {\n            name: 'New Relic Browser',\n            url: 'https://docs.newrelic.com/docs/browser/new-relic-browser/installation/install-new-relic-browser-agent'\n          }\n        case 'SyntheticCheck':\n          return {\n            name: 'New Relic Synthetics',\n            url: 'https://docs.newrelic.com/docs/synthetics/new-relic-synthetics/getting-started/introduction-new-relic-synthetics'\n          }\n        case 'Transaction':\n          return {\n            name: 'New Relic APM',\n            url: 'https://docs.newrelic.com/docs/apm'\n          }\n        case 'Kubernetes':\n          return {\n            name: 'New Relic Kubernetes',\n            url: 'https://docs.newrelic.com/docs/integrations/kubernetes-integration/get-started/introduction-kubernetes-integration'\n          }\n        case 'Prometheus':\n          return {\n            name: 'New Relic Prometheus Integration',\n            url: 'https://docs.newrelic.com/docs/integrations/prometheus-integrations/install-configure/install-update-or-uninstall-your-prometheus-openmetrics-integration'\n          }\n        case 'Log':\n          return {\n            name: 'New Relic Logs',\n            url: 'https://docs.newrelic.com/docs/logs'\n          }\n        case 'Metric':\n          // Cases to ingore, as they are general metrics\n          return {};\n        default:\n          return {\n            name: 'Unknown source: ' + source,\n          }\n      }\n    }).sort().filter(function(item, pos, ary) {\n      if (!item.name) { return false; }\n      return !pos || item.name !== ary[pos - 1].name;\n    });\n\n    this.state = {\n      requirements: installation\n    }\n  }\n\n  render() {\n    return (\n        <ul>\n          {this.state.requirements.sort((a, b) => (a.name > b.name) ? 1 : -1).map((requirement, i) => {\n            if (requirement.url) {\n              return ( <li key={requirement.name}><a href={requirement.url} target=\"_BLANK\" rel=\"noopener noreferrer\">{requirement.name}</a></li> )\n            } else {\n              return ( <li key={requirement.name}>{requirement.name}</li> )\n            }\n          })}\n        </ul>\n    );\n  }\n\n}\n\nexport default InstallationInstructions;\n","import React from 'react';\nimport Datasource from '../Partials/Datasource';\nimport InstallationInstructions from '../Partials/InstallationInstructions';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport data from '../data.json';\n\nclass View extends React.Component {\n\n    modalCallback = undefined;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            'dashboard': data.dashboards.find(element => element.name === props.match.params.handle),\n            'visible': 0,\n            'modalVisible': false,\n            'accountId': '',\n        };\n\n        this.copy = this.copy.bind(this);\n        this.setAccountId = this.setAccountId.bind(this);\n        this.submitModal = this.submitModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    getAccountId(callback) {\n        this.modalCallback = callback;\n        this.setState({\n            'modalVisible': true,\n        });\n    }\n\n    submitModal() {\n        this.setState({\n            'modalVisible': false,\n        });\n        if (this.modalCallback) {\n            this.modalCallback();\n        }\n    }\n\n    closeModal() {\n        this.setState({\n            'modalVisible': false,\n        });\n    }\n\n    setAccountId(event) {\n        this.setState({\n            'accountId': event.target.value,\n        });\n    }\n\n    getDashboard(file, callback) {\n        this.getAccountId(() => {\n            fetch('./data/' + file.location).then(response => response.json()).then((json) => {\n                json.dashboard_account_id = +this.state.accountId;\n                callback(JSON.stringify(json));\n            });\n        });\n    }\n\n    copy(file) {\n        this.getDashboard(file, (text) => {\n            navigator.permissions.query({name: \"clipboard-write\"}).then(result => {\n                if (result.state === \"granted\" || result.state === \"prompt\") {\n                    navigator.clipboard.writeText(text).then(function() {\n                        alert('Dashboard copied to clipboard');\n                    }, function(error) {\n                        console.log('error', error);\n                        alert('Failed to copy dashboard to clipboard');\n                    });\n                }\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"album py-2\">\n                <div className=\"container\" id=\"root\">\n                    <div className=\"row py-4\">\n                        <div className=\"col-8\">\n                            <h2>{ this.state.dashboard.config.name }</h2>\n                        </div>\n                        <div className=\"col-4 text-right\">\n                            <Link className=\"btn btn-default\" to={\"/\"}>\n                                Back to homepage\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-8\">\n                            <p><b>Created by:</b> { this.state.dashboard.config.author }</p>\n                            <Datasource sources={this.state.dashboard.sources} />\n                            <h5 className=\"pt-4\">Installation instructions</h5>\n                            <p>This dashboard requires the following New Relic products:</p>\n                            <InstallationInstructions sources={this.state.dashboard.sources} />\n                        </div>\n                        <div className=\"col-4 text-right\">\n                            <a class=\"btn btn-danger\" href={\"https://github.com/newrelic-experimental/quickstarts/issues/new?labels=bug&title=Problem%20with%20\" + this.state.dashboard.config.name}>Report a problem</a>\n                        </div>\n                    </div>\n                    <div className=\"row py-4\">\n                        <h3>Dashboards</h3>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <ul className=\"nav nav-tabs\">\n                                {this.state.dashboard.files.map((file, i) => {\n                                    let selected = '';\n                                    if (this.state.visible === i) selected = 'active';\n                                    return (\n                                        <li className=\"nav-item\" key={file.name}>\n                                            <button className={\"nav-link btn \" + selected} onClick={(event) => { this.setState({visible: i}) }}>\n                                                {file.name}\n                                            </button>\n                                        </li>\n                                    )\n                                })}\n                            </ul>\n                        </div>\n                        {this.state.dashboard.files.map((file, i) => {\n                            if (this.state.visible !== i) return ( <span key={file.name}></span> );\n                            return (\n                                <div className=\"row px-4 py-2 dashboard-info bg-light\" key={file.name}>\n                                    <div className=\"col-12 py-3 text-right\">\n                                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                            <button className=\"btn btn-primary\">Import to New Relic (TODO)</button>\n                                            <button className=\"btn btn-info\" onClick={(event) => { this.copy(file) }}>Copy to clipboard</button>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <img src={ \"data/\" + this.state.dashboard.name + \"/\" + this.state.dashboard.screenshots[i]} className=\"card-img-top\" alt=\"...\" />\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div className=\"row py-4\">\n                        <div className=\"col-12\">\n                            <h3>Alerts</h3>\n                        </div>\n                        <div className=\"col-12\">\n                            <p>Work in progress: Example alerts the customer could set-up</p>\n                        </div>\n                    </div>\n                </div>\n\n                {this.state.modalVisible&&\n                    <div className=\"modal fade show\" tabIndex=\"-1\" role=\"dialog\" style={{\"display\": \"block\", \"background-color\": \"rgba(150, 150, 150, 0.50)\"}}>\n                        <div className=\"modal-dialog\" role=\"document\">\n                            <div className=\"modal-content\">\n                                <div className=\"modal-header\">\n                                    <h5 className=\"modal-title\">Choose your New Relic account ID</h5>\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={this.closeModal}>\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    <p>You can find your account ID in New Relic UI:</p>\n                                    <input type=\"text\" className=\"form-control\" id=\"accountId\" aria-describedby=\"Account Id\" placeholder=\"\" value={this.state.accountId} onChange={this.setAccountId} />\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.submitModal}>Set</button>\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.closeModal}>Cancel</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default View;\n","import React from 'react';\nimport {\n    Switch,\n    Route,\n    HashRouter\n  } from \"react-router-dom\";\nimport Home from './Pages/Home';\nimport View from './Pages/View';\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/view/:handle\" component={View} />\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </HashRouter>\n        )\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}